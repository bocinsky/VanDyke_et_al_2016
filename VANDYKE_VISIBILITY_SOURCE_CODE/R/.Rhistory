plot(GHtoGH.late.viewnet,layout=cbind(V(GHtoGH.viewnet)$EASTING,V(GHtoGH.viewnet)$NORTHING), vertex.shape="none", edge.color="black", edge.width=1,rescale=FALSE, add=T, vertex.label=NA)
plot(GHtoSHRINES.late.viewnet,layout=cbind(V(GHtoSHRINES.viewnet)$EASTING,V(GHtoSHRINES.viewnet)$NORTHING), vertex.shape="none", edge.lty=2, edge.color="black", edge.width=1,rescale=FALSE, add=T, vertex.label=NA)
# plot(GHtoLANDFORM.late.viewnet,layout=cbind(V(GHtoLANDFORM.viewnet)$EASTING,V(GHtoLANDFORM.viewnet)$NORTHING), vertex.shape="none", edge.lty=3, edge.color="black", edge.width=1,rescale=FALSE, add=T, vertex.label=NA)
# plot(sites[sites$SITE_TYPE %in% c("LANDFORM"),], add=T, pch=22, cex=0.75, lwd=1, col="black", bg="white")
plot(sites.GH.late, add=T, pch=21, cex=0.75, lwd=1, col="black", bg="white")
plot(sites[sites$SITE_TYPE %in% c("SHRINE","STONE_CIRCLE", "CRESCENT","HERRADURA"),], add=T, pch=15, cex=0.5, lwd=1,col="black")
text(labels="b", x=xmax(hill.small)-(0.05 * inch.x), y=ymin(hill.small)+(0.05 * inch.y), adj=c(1,0), cex=2, font=2)
dev.off()
distill('../FIGURES/EARLY_VS_LATE_VIEWNETS.pdf')
setwd("/Volumes/BOCINSKY_DATA/WORKING/VanDykeEtAl2015/FINAL_PAPER/R/")
# The packages we will use.
# Load the functions for all analyses below
# install.packages("devtools", dependencies=T, repos = "http://cran.rstudio.com")
# devtools::install_github("bocinsky/FedData")
library(FedData)
pkg_test("igraph")
pkg_test("png")
pkg_test("RColorBrewer")
dir.create("../FIGURES/DATA/", recursive=T, showWarnings = F)
# Suppress scientific notation
options(scipen=999)
junk <- lapply(list.files("./src", full.names=T),source)
# American Antiquity image sizes
full.width <- 5.5
half.width <- (5.5/2) - (3/16)
# DEM <- raster("../OUTPUT/DEM50.tif")
# DEM <- DEM*2
# slope <- terrain(DEM, opt='slope')
# aspect <- terrain(DEM, opt='aspect')
# hill <- hillShade(slope, aspect, 40, 230)
# # Aggregate cells of hillshade for better plotting
# hill.small <- aggregate(hill, 4)
# writeRaster(hill.small, "../FIGURES/DATA/HILL_SMALL50.tif", datatype = "FLT4S", options = c("COMPRESS=DEFLATE", "ZLEVEL=9", "INTERLEAVE=BAND"), overwrite = T, setStatistics = FALSE)
hill.small <- raster("../FIGURES/DATA/HILL_SMALL50.tif")
# Reduce the study area
hill.small <- crop(hill.small, extent(560000,860000,3780000,4180000))
plot.ratio <- (ymax(hill.small)-ymin(hill.small))/(xmax(hill.small)-xmin(hill.small)) # y/x
# Create smaller versions
chaco.basin.poly <- polygon_from_extent(extent(c(710000,830000,3935000,4025000)),projection(hill.small))
# chaco.basin.hill <- crop(hill,chaco.basin.poly)
# writeRaster(chaco.basin.hill, "../FIGURES/DATA/CHACO_BASIN_HILL50.tif", datatype = "FLT4S", options = c("COMPRESS=DEFLATE", "ZLEVEL=9", "INTERLEAVE=BAND"), overwrite = T, setStatistics = FALSE)
chaco.basin.hill <- raster("../FIGURES/DATA/CHACO_BASIN_HILL50.tif")
# quartz(file='../FIGURES/CHACO_BASIN_HILLSHADE.png', width=full.width, height=full.width*0.75, antialias=FALSE, bg="white", type='png', family="Gulim", pointsize=8, dpi=600)
# par(mai=c(0,0,0,0))
# plot(1, type='n', xlab="", ylab="", xlim=c(xmin(chaco.basin.hill),xmax(chaco.basin.hill)),ylim=c(ymin(chaco.basin.hill),ymax(chaco.basin.hill)), xaxs="i", yaxs="i", axes=FALSE, main='')
# plot(chaco.basin.hill, col=grey(50:100/100), maxpixels=ncell(chaco.basin.hill), useRaster=T, legend=FALSE,  xlab="", ylab="", axes=FALSE, main='', add=T)
# dev.off()
CHACO_BASIN_HILLSHADE.png <- readPNG('../FIGURES/CHACO_BASIN_HILLSHADE.png')
chaco.canyon.poly <- polygon_from_extent(extent(c(764500,788500,3984500,4002500)),projection(hill.small))
# chaco.canyon.hill <- crop(hill,chaco.canyon.poly)
# writeRaster(chaco.canyon.hill, "../FIGURES/DATA/CHACO_CANYON_HILL50.tif", datatype = "FLT4S", options = c("COMPRESS=DEFLATE", "ZLEVEL=9", "INTERLEAVE=BAND"), overwrite = T, setStatistics = FALSE)
chaco.canyon.hill <- raster("../FIGURES/DATA/CHACO_CANYON_HILL50.tif")
# quartz(file='../FIGURES/CHACO_CANYON_HILLSHADE.png', width=full.width, height=full.width*0.75, antialias=FALSE, bg="white", type='png', family="Gulim", pointsize=8, dpi=600)
# par(mai=c(0,0,0,0))
# plot(1, type='n', xlab="", ylab="", xlim=c(xmin(chaco.canyon.hill),xmax(chaco.canyon.hill)),ylim=c(ymin(chaco.canyon.hill),ymax(chaco.canyon.hill)), xaxs="i", yaxs="i", axes=FALSE, main='')
# plot(chaco.canyon.hill, col=grey(50:100/100), maxpixels=ncell(chaco.canyon.hill), useRaster=T, legend=FALSE,  xlab="", ylab="", axes=FALSE, main='', add=T)
# dev.off()
CHACO_CANYON_HILLSHADE.png <- readPNG('../FIGURES/CHACO_CANYON_HILLSHADE.png')
# Define the study area
study.area <- polygon_from_extent(extent(c(460000,860000,3780000,4180000)),projection(hill.small))
# Read in site data
sites <- suppressWarnings(readOGR("../OUTPUT/VanDykeEtAl2015_SITE_DATA.kml","VanDykeEtAl2015_SITE_DATA"))
sites <- spTransform(sites,CRS(projection(hill.small)))
names(sites) <- toupper(names(sites))
sites <- sites[!is.na(sites$PRIMARY_LOCATION),]
sites <- sites[sites$PRIMARY_LOCATION==1,]
sites <- sites[sites$SITE_NAME != "Wupatki",]
sites.robust <- suppressWarnings(readOGR("../OUTPUT/VanDykeEtAl2015_SITE_DATA_ROBUST.kml","VanDykeEtAl2015_SITE_DATA_ROBUST"))
sites.robust <- spTransform(sites.robust,CRS(projection(hill.small)))
# Read in the viewnets
sites.viewnet <- read.graph("../OUTPUT/NETWORKS/ALL_SITES_50.graphml",format="graphml")
GH.ids <- as.vector(V(sites.viewnet)[SITE_TYPE %in% c("GH_OUTLIER","GH_CORE")])
SHRINE.ids <- as.vector(V(sites.viewnet)[SITE_TYPE %in% c("SHRINE","STONE_CIRCLE","CRESCENT","HERRADURA")])
LANDFORM.ids <- as.vector(V(sites.viewnet)[SITE_TYPE %in% c("LANDFORM")])
GHtoLANDFORM.viewnet <- subgraph.edges(sites.viewnet, unlist(sites.viewnet[[GH.ids, LANDFORM.ids, edges=T]]),delete.vertices=FALSE)
GHtoSHRINES.viewnet <- subgraph.edges(sites.viewnet, unlist(sites.viewnet[[GH.ids, SHRINE.ids, edges=T]]),delete.vertices=FALSE)
GHtoGH.viewnet <- subgraph.edges(sites.viewnet, unlist(sites.viewnet[[GH.ids, GH.ids, edges=T]]),delete.vertices=FALSE)
# Read in the US State boundaries
# states <- readOGR("/Volumes/DATA/NATIONAL_ATLAS/statep010/", layer='statep010')
# states <- states[states$STATE %in% c("Utah","New Mexico"),]
# states <- spTransform(states,CRS(projection(hill)))
# suppressWarnings(writeOGR(states,"../FIGURES/DATA/","states",driver="ESRI Shapefile", overwrite_layer=TRUE))
states <- readOGR("../FIGURES/DATA/", layer='states')
west.state.ycoord <- ymin(extent(rgeos::gIntersection(spTransform(study.area,CRS(projection(states))),states[states$STATE=="Utah",])))
east.state.ycoord <- ymax(extent(rgeos::gIntersection(spTransform(study.area,CRS(projection(states))),states[states$STATE=="New Mexico",])))
# Get the NHD rivers
# water.lines <- readOGR("/Volumes/DATA/NATIONAL_ATLAS/hydrogm020/","hydrogl020")
# projection(water.lines) <- "+proj=longlat +datum=NAD83 +no_defs +ellps=GRS80 +towgs84=0,0,0"
# water.lines <- crop(water.lines,spTransform(study.area,CRS(projection(water.lines))))
# water.lines <- spTransform(water.lines,CRS(projection(hill)))
# water.lines.small <- water.lines[water.lines$NAME %in% c("San Juan River",
#                                                          "Chaco River",
#                                                          "Dolores River",
#                                                          "Piedra River",
#                                                          "Animas River",
#                                                          "La Plata River",
#                                                          "Little Colorado River",
#                                                          "Chinle Wash",
#                                                          "Chinle Creek",
#                                                          "McElmo Creek",
#                                                          "Mancos River",
#                                                          "Puerco River",
#                                                          "Montezuma Creek",
#                                                          "Rio San Jose",
#                                                          "Black River",
#                                                          "Los Pinos River"),]
# suppressWarnings(writeOGR(water.lines.small,"../FIGURES/DATA/","water.lines.small",driver="ESRI Shapefile", overwrite_layer=TRUE))
water.lines.small <- readOGR("../FIGURES/DATA/", layer='water.lines.small')
# water.polys <- readOGR("/Volumes/DATA/NATIONAL_ATLAS/hydrogm020/","hydrogp020")
# projection(water.polys) <- "+proj=longlat +datum=NAD83 +no_defs +ellps=GRS80 +towgs84=0,0,0"
# water.polys <- water.polys[water.polys$AREA<400,]
# water.polys <- crop(water.polys,spTransform(study.area,CRS(projection(water.polys))))
# water.polys <- spTransform(water.polys,CRS(projection(hill)))
# water.polys.small <- water.polys[water.polys$NAME %in% c("Lake Powell",
#                                                    "McPhee Reservoir",
#                                                    "Narraguinnnep Reservoir",
#                                                    "Navajo Reservoir",
#                                                    "Zion Reservoir",
#                                                    "Lyman Lake",
#                                                    "Vallecito Reservoir"),]
# suppressWarnings(writeOGR(water.polys.small,"../FIGURES/DATA/","water.polys.small",driver="ESRI Shapefile", overwrite_layer=TRUE))
water.polys.small <- readOGR("../FIGURES/DATA/", layer='water.polys.small')
# plot(water.lines.small)
# plot(water.polys.small, add=T, col='black')
# water.polys$NAME
# Federal land
# fedland <- readOGR("/Volumes/DATA/NATIONAL_ATLAS/fedlanp020/", layer='fedlanp020')
# projection(fedland) <- CRS("+proj=longlat +datum=NAD83 +no_defs +ellps=GRS80 +towgs84=0,0,0")
# fedland <- raster::crop(fedland,spTransform(study.area,CRS(projection(fedland))))
# CANM <- SpatialPolygonsDataFrame(rgeos::gUnaryUnion(fedland[which(fedland$NAME1 == "Canyons of the Ancients National Monument"),]), data=data.frame(name="Canyons of the Ancients National Monument"))
# MVNP <- SpatialPolygonsDataFrame(rgeos::gUnaryUnion(fedland[which(grepl("Mesa Verde",fedland$NAME1)),]), data=data.frame(name="Mesa Verde National Park"))
# CHACO <- SpatialPolygonsDataFrame(rgeos::gUnaryUnion(fedland[which(grepl("Chaco",fedland$NAME1)),]), data=data.frame(name="Chaco Culture National Historical Park"))
# CHELLY <- SpatialPolygonsDataFrame(rgeos::gUnaryUnion(fedland[which(fedland$NAME1 == "Canyon de Chelly National Monument"),]), data=data.frame(name="Canyon de Chelly National Monument"))
# PET <- SpatialPolygonsDataFrame(rgeos::gUnaryUnion(fedland[which(grepl("Petrified",fedland$NAME1)),]), data=data.frame(name="Petrified Forest National Park"))
# MALPAIS <- SpatialPolygonsDataFrame(rgeos::gUnaryUnion(fedland[which(fedland$NAME1 == "El Malpais National Monument"),]), data=data.frame(name="El Malpais National Monument"))
# CANM <- spChFIDs(CANM,"Canyons of the Ancients National Monument")
# MVNP <- spChFIDs(MVNP,"Mesa Verde National Park")
# CHACO <- spChFIDs(CHACO,"Chaco Culture National Historical Park")
# CHELLY <- spChFIDs(CHELLY,"Canyon de Chelly National Monument")
# PET <- spChFIDs(PET,"Petrified Forest National Park")
# MALPAIS <- spChFIDs(MALPAIS,"El Malpais National Monument")
# fedland <- rbind(CANM,MVNP,CHACO,CHELLY,PET,MALPAIS)
# fedland <- spTransform(fedland,CRS(projection(hill)))
# suppressWarnings(writeOGR(fedland,"../FIGURES/DATA/","fedland",driver="ESRI Shapefile", overwrite_layer=TRUE))
fedland <- readOGR("../FIGURES/DATA/", layer='fedland')
# Make and cache the background hillshade PNG
# quartz(file='../FIGURES/HILLSHADE.png', width=full.width, height=full.width*plot.ratio, antialias=FALSE, bg="white", type='png', family="Gulim", pointsize=8, dpi=600)
# par(mai=c(0,0,0,0))
# plot(1, type='n', xlab="", ylab="", xlim=c(xmin(hill.small),xmax(hill.small)),ylim=c(ymin(hill.small),ymax(hill.small)), xaxs="i", yaxs="i", axes=FALSE, main='')
# plot(hill.small, col=grey(50:100/100), maxpixels=ncell(hill.small), useRaster=T, legend=FALSE,  xlab="", ylab="", axes=FALSE, main='', add=T)
# dev.off()
HILLSHADE.png <- readPNG('../FIGURES/HILLSHADE.png')
### FIGURE 1: Landscape
fig.height <- full.width*plot.ratio
fig.width <- full.width
pointsize <- 8
pdf(file='../FIGURES/OVERVIEW.pdf', width=fig.width, height=fig.height, bg="white", pointsize=8, version="1.7", colormodel="gray")
# pdf(file='./FIGURE_1.pdf', width=fig.width, height=fig.height, bg="white", pointsize=8, version="1.7")
# VEPIIN prcp
par(mai=c(0,0,0,0),
oma=c(0,0,0,0),
lend=2,
ljoin=1,
xpd=F)
plot(1, type='n', xlab="", ylab="", xlim=c(xmin(hill.small),xmax(hill.small)),ylim=c(ymin(hill.small),ymax(hill.small)), xaxs="i", yaxs="i", axes=FALSE, main='')
inch <- (xmax(hill.small)-xmin(hill.small))/(fig.width-par('mai')[2]-par('mai')[4])
rasterImage(HILLSHADE.png, xmin(hill.small),ymin(hill.small),xmax(hill.small),ymax(hill.small), interpolate=F)
plot(water.lines.small, add=T, col="gray40", lwd=1)
plot(water.polys.small, add=T, col="gray40", border=NA)
plot(states, add=T, border="black", lty=2, lwd=2, lend=2, ljoin=0)
plot(fedland, border="black", lty=3, add=T)
text(fedland[1,], labels=1, cex=1.5)
text(fedland[2,], labels=2, pos=4, cex=1.5, offset=2)
text(fedland[3,], labels=3, pos=3, cex=1.5, offset=1.5)
text(fedland[4,], labels=4, pos=3, cex=1.5, offset=2.25)
text(fedland[5,], labels=5, pos=2, cex=1.5, offset=1.5)
text(fedland[6,], labels=6, pos=3, cex=1.5, offset=2)
plot(chaco.basin.poly, add=T)
plot(chaco.canyon.poly, add=T)
text(extent(chaco.basin.poly)@xmax,extent(chaco.basin.poly)@ymax, labels="Fig. 6a", cex=1.5, adj=c(1,-0.5))
text(extent(chaco.canyon.poly)@xmax,extent(chaco.canyon.poly)@ymax, labels="Fig. 6b", cex=1.5, adj=c(0.1,-0.5))
plot(sites[sites$SITE_TYPE %in% c("GH_CORE","GH_OUTLIER"),], add=T, pch=21, cex=1.5, lwd=1, col="black", bg="white")
plot(sites[sites$SITE_TYPE %in% c("SHRINE","STONE_CIRCLE", "CRESCENT","HERRADURA"),], add=T, pch=15, cex=1, lwd=1,col="black")
inch.x <- (xmax(hill.small)-xmin(hill.small))/(fig.width-par('mai')[2]-par('mai')[4])
inch.y <- (ymax(hill.small)-ymin(hill.small))/(fig.height-par('mai')[1]-par('mai')[3])
scalebar.new(d=20000, cex=0.075/(pointsize/100), font=2, side='left',lab.side='left', height=0.05*inch.y, label="20 km", line.offset=c(-0.05*inch.x,0.05*inch.y), xy=c(xmax(hill.small),ymin(hill.small)), lwd=2, lend=1)
north.width <- 0.1
north.height <- 0.25
inch.xy <- c(0.1,0.15)
n.ratio <- 5/4
arrows(x0=xmax(hill.small)-inch.xy[1]*inch.x,y0=ymin(hill.small)+inch.xy[2]*inch.y,x1=xmax(hill.small)-inch.xy[1]*inch.x,y1=ymin(hill.small)+(inch.xy[2]+north.height)*inch.y, length=(north.width/2)/sin(pi/4), angle=45, lwd=n.ratio*north.width/(pointsize/100), lend=1)
text(labels="N",x=xmax(hill.small)-0.1*inch.x,y=ymin(hill.small)+0.15*inch.y,adj=c(0.5,0),cex=n.ratio*north.width/(pointsize/100), font=2)
text(xmin(hill.small)+(0.05 * inch.x),west.state.ycoord+(0.1 * inch.y),labels="Utah", adj=c(0,0), col="black", font=1, cex=1.25)
text(xmin(hill.small)+(0.05 * inch.x),west.state.ycoord-(0.1 * inch.y),labels="Arizona", adj=c(0,1), col="black", font=1, cex=1.25)
text(xmax(hill.small)-(0.05 * inch.x),east.state.ycoord+(0.1 * inch.y),labels="Colorado", adj=c(1,0), col="black", font=1, cex=1.25)
text(xmax(hill.small)-(0.05 * inch.x),east.state.ycoord-(0.1 * inch.y),labels="New Mexico", adj=c(1,1), col="black", font=1, cex=1.25)
dev.off()
distill('../FIGURES/OVERVIEW.pdf')
### FIGURE 2: CVS
GH.cvs <- raster("../OUTPUT/GH.cvs.tif")
GH.cvs  <- crop(GH.cvs, extent(560000,860000,3780000,4180000))
GH.colors <- c(NA,colorRampPalette(rev(brewer.pal(11,"RdYlBu")[1:6]))(maxValue(GH.cvs)))
quartz(file='../FIGURES/GH.CVS.png', width=full.width, height=full.width*plot.ratio, antialias=FALSE, bg="white", type='png', family="Gulim", pointsize=8, dpi=600)
par(mai=c(0,0,0,0))
plot(1, type='n', xlab="", ylab="", xlim=c(xmin(hill.small),xmax(hill.small)),ylim=c(ymin(hill.small),ymax(hill.small)), xaxs="i", yaxs="i", axes=FALSE, main='')
plot(hill.small, col=grey(50:100/100), maxpixels=ncell(hill.small), useRaster=T, legend=FALSE,  xlab="", ylab="", axes=FALSE, main='', add=T)
plot(GH.cvs, col=GH.colors, maxpixels=ncell(GH.cvs), useRaster=T, legend=FALSE,  xlab="", ylab="", axes=FALSE, main='', add=T)
dev.off()
GH.CVS.png <- readPNG('../FIGURES/GH.CVS.png')
SHRINE.cvs <- raster("../OUTPUT/SHRINE.cvs.tif")
SHRINE.cvs  <- crop(SHRINE.cvs, extent(560000,860000,3780000,4180000))
SHRINE.colors <- c(NA,colorRampPalette(brewer.pal(11,"RdYlBu")[6:11])(maxValue(SHRINE.cvs)))
quartz(file='../FIGURES/SHRINE.CVS.png', width=full.width, height=full.width*plot.ratio, antialias=FALSE, bg="white", type='png', family="Gulim", pointsize=8, dpi=600)
par(mai=c(0,0,0,0))
plot(1, type='n', xlab="", ylab="", xlim=c(xmin(hill.small),xmax(hill.small)),ylim=c(ymin(hill.small),ymax(hill.small)), xaxs="i", yaxs="i", axes=FALSE, main='')
plot(hill.small, col=grey(50:100/100), maxpixels=ncell(hill.small), useRaster=T, legend=FALSE,  xlab="", ylab="", axes=FALSE, main='', add=T)
plot(SHRINE.cvs, col=SHRINE.colors, maxpixels=ncell(SHRINE.cvs), useRaster=T, legend=FALSE,  xlab="", ylab="", axes=FALSE, main='', add=T)
dev.off()
SHRINE.CVS.png <- readPNG('../FIGURES/SHRINE.CVS.png')
GH.only.cvs <- calc(GH.cvs,function(x){x[x>0] <- 1; return(x)})
SHRINE.only.cvs <- calc(SHRINE.cvs,function(x){x[x>0] <- 1; return(x)})
GH.plus.SHRINE <- GH.only.cvs+SHRINE.only.cvs
GH.plus.SHRINE <- calc(GH.plus.SHRINE,function(x){x[x==1] <- 0; x[x==2] <- 1; return(x)})
GH.only.cvs <- GH.only.cvs-GH.plus.SHRINE
SHRINE.only.cvs <- SHRINE.only.cvs-GH.plus.SHRINE
GH.plus.SHRINE <- calc(GH.plus.SHRINE,function(x){x[x==0] <- NA; return(x)})
GH.only.cvs <- calc(GH.only.cvs,function(x){x[x==0] <- NA; return(x)})
SHRINE.only.cvs <- calc(SHRINE.only.cvs,function(x){x[x==0] <- NA; return(x)})
quartz(file='../FIGURES/GH.plus.SHRINE.CVS.png', width=full.width, height=full.width*plot.ratio, antialias=FALSE, bg="white", type='png', family="Gulim", pointsize=8, dpi=600)
par(mai=c(0,0,0,0))
plot(1, type='n', xlab="", ylab="", xlim=c(xmin(hill.small),xmax(hill.small)),ylim=c(ymin(hill.small),ymax(hill.small)), xaxs="i", yaxs="i", axes=FALSE, main='')
plot(hill.small, col=grey(50:100/100), maxpixels=ncell(hill.small), useRaster=T, legend=FALSE,  xlab="", ylab="", axes=FALSE, main='', add=T)
plot(GH.plus.SHRINE, col="#ffffbfcc", maxpixels=48000000, useRaster=T, legend=FALSE,  xlab="", ylab="", axes=FALSE, main='', add=T)
plot(GH.only.cvs, col="#a50026cc", maxpixels=48000000, useRaster=T, legend=FALSE,  xlab="", ylab="", axes=FALSE, main='', add=T)
plot(SHRINE.only.cvs, col="#313695cc", maxpixels=48000000, useRaster=T, legend=FALSE,  xlab="", ylab="", axes=FALSE, main='', add=T)
dev.off()
GH.plus.SHRINE.CVS.png <- readPNG('../FIGURES/GH.plus.SHRINE.CVS.png')
fig.width <- full.width
between <- 0.05
num.plots <- 3
plot.width <- (full.width - (between * (num.plots-1)))/num.plots
fig.height <- plot.width * plot.ratio
pdf(file='../FIGURES/CVS.pdf', width=fig.width, height=fig.height, bg="white", pointsize=8, version="1.7")
# VEPIIN prcp
i <- 1
par(mai=c(0,(plot.width * (i-1)) + (between * (i-1)),0,(plot.width * (num.plots-i)) + (between * (num.plots-i))),
oma=c(0,0,0,0),
lend=2,
ljoin=1,
xpd=F)
plot(1, type='n', xlab="", ylab="", xlim=c(xmin(hill.small),xmax(hill.small)),ylim=c(ymin(hill.small),ymax(hill.small)), xaxs="i", yaxs="i", axes=FALSE, main='')
rasterImage(GH.CVS.png, xmin(hill.small),ymin(hill.small),xmax(hill.small),ymax(hill.small), interpolate=F)
inch.x <- (xmax(hill.small)-xmin(hill.small))/(fig.width-par('mai')[2]-par('mai')[4])
inch.y <- (ymax(hill.small)-ymin(hill.small))/(fig.height-par('mai')[1]-par('mai')[3])
text(labels="a", x=xmax(hill.small)-(0.05 * inch.x), y=ymin(hill.small)+(0.05 * inch.y), adj=c(1,0), cex=2, font=2)
i <- 2
par(mai=c(0,(plot.width * (i-1)) + (between * (i-1)),0,(plot.width * (num.plots-i)) + (between * (num.plots-i))),
oma=c(0,0,0,0),
lend=2,
ljoin=1,
xpd=F,
new=T)
plot(1, type='n', xlab="", ylab="", xlim=c(xmin(hill.small),xmax(hill.small)),ylim=c(ymin(hill.small),ymax(hill.small)), xaxs="i", yaxs="i", axes=FALSE, main='')
rasterImage(GH.plus.SHRINE.CVS.png, xmin(hill.small),ymin(hill.small),xmax(hill.small),ymax(hill.small), interpolate=F)
text(labels="b", x=xmax(hill.small)-(0.05 * inch.x), y=ymin(hill.small)+(0.05 * inch.y), adj=c(1,0), cex=2, font=2)
i <- 3
par(mai=c(0,(plot.width * (i-1)) + (between * (i-1)),0,(plot.width * (num.plots-i)) + (between * (num.plots-i))),
oma=c(0,0,0,0),
lend=2,
ljoin=1,
xpd=F,
new=T)
plot(1, type='n', xlab="", ylab="", xlim=c(xmin(hill.small),xmax(hill.small)),ylim=c(ymin(hill.small),ymax(hill.small)), xaxs="i", yaxs="i", axes=FALSE, main='')
rasterImage(SHRINE.CVS.png, xmin(hill.small),ymin(hill.small),xmax(hill.small),ymax(hill.small), interpolate=F)
text(labels="c", x=xmax(hill.small)-(0.05 * inch.x), y=ymin(hill.small)+(0.05 * inch.y), adj=c(1,0), cex=2, font=2)
dev.off()
distill('../FIGURES/CVS.pdf')
### FIGURE 3: CVS ECDF
phi <- (1+sqrt(5))/2
mai <- c(0.1,0.1,0,0)
fig.width <- half.width
fig.height <- fig.width/phi
margins <- 0.35
plot.height <- (fig.height-(margins))
ecdf.GH <- ecdf(GH.cvs[])
ecdf.SHRINE <- ecdf(SHRINE.cvs[])
ecdf.GH.plus.SHRINE <- ecdf(GH.cvs[]+SHRINE.cvs[])
quartz(file="../FIGURES/CVS_ECDF.pdf", width=fig.width, height=fig.height, antialias=FALSE, bg="white", type='pdf', family="Gulim", pointsize=6, dpi=600)
par(bg='white',fg='black',col.lab='black', col.main='black', col.axis='black', family='Helvetica Bold', lend="round", ljoin='round')
par(mai=c(margins,margins,margins*0.25,margins*0.25), xpd=F)
plot(1, type='n', xlab="", ylab="",xaxs='i',yaxs='i', xlim=c(0,20), ylim=c(0.6,1), axes=FALSE, main='')
plot(ecdf.GH, do.points=F, verticals=T, add=T, lwd=1, col='#a50026', col.01line=adjustcolor('white',alpha.f=0))
plot(ecdf.SHRINE, do.points=F, verticals=T, add=T, lwd=1, col='#313695', col.01line=adjustcolor('white',alpha.f=0))
plot(ecdf.GH.plus.SHRINE, do.points=F, verticals=T, add=T, lwd=1, col='black', col.01line=adjustcolor('white',alpha.f=0))
legend("bottomright", fill=c('#a50026','#313695','black'), border=NA, legend=c("Great houses","Shrines","All sites"), bty='n')
mtext("Cumulative probability", side=2, line=2.5, cex=1)
axis(2, las=1)
axis(1)
# box()
mtext("Number of visible places", side=1, line=2.5, cex=1)
dev.off()
distill("../FIGURES/CVS_ECDF.pdf")
### FIGURE 4: VIEWNETS - GH2GH and GH2SHRINES
fig.width <- full.width
between <- 0.05
num.plots <- 2
plot.width <- (full.width - (between * (num.plots-1)))/num.plots
fig.height <- plot.width * plot.ratio
pdf(file='../FIGURES/VIEWNETS.pdf', width=fig.width, height=fig.height, bg="white", pointsize=8, version="1.7")
# VEPIIN prcp
i <- 1
par(mai=c(0,(plot.width * (i-1)) + (between * (i-1)),0,(plot.width * (num.plots-i)) + (between * (num.plots-i))),
oma=c(0,0,0,0),
lend=2,
ljoin=1,
xpd=F)
plot(1, type='n', xlab="", ylab="", xlim=c(xmin(hill.small),xmax(hill.small)),ylim=c(ymin(hill.small),ymax(hill.small)), xaxs="i", yaxs="i", axes=FALSE, main='')
rasterImage(HILLSHADE.png, xmin(hill.small),ymin(hill.small),xmax(hill.small),ymax(hill.small), interpolate=F)
plot(GHtoGH.viewnet,layout=cbind(V(GHtoGH.viewnet)$EASTING,V(GHtoGH.viewnet)$NORTHING), vertex.shape="none", edge.color="black", edge.width=1,rescale=FALSE, add=T, vertex.label=NA)
plot(sites[sites$SITE_TYPE %in% c("GH_CORE","GH_OUTLIER"),], add=T, pch=21, cex=0.75, lwd=1, col="black", bg="white")
inch.x <- (xmax(hill.small)-xmin(hill.small))/(fig.width-par('mai')[2]-par('mai')[4])
inch.y <- (ymax(hill.small)-ymin(hill.small))/(fig.height-par('mai')[1]-par('mai')[3])
text(labels="a", x=xmax(hill.small)-(0.05 * inch.x), y=ymin(hill.small)+(0.05 * inch.y), adj=c(1,0), cex=2, font=2)
i <- 2
par(mai=c(0,(plot.width * (i-1)) + (between * (i-1)),0,(plot.width * (num.plots-i)) + (between * (num.plots-i))),
oma=c(0,0,0,0),
lend=2,
ljoin=1,
xpd=F,
new=T)
plot(1, type='n', xlab="", ylab="", xlim=c(xmin(hill.small),xmax(hill.small)),ylim=c(ymin(hill.small),ymax(hill.small)), xaxs="i", yaxs="i", axes=FALSE, main='')
rasterImage(HILLSHADE.png, xmin(hill.small),ymin(hill.small),xmax(hill.small),ymax(hill.small), interpolate=F)
plot(GHtoGH.viewnet,layout=cbind(V(GHtoGH.viewnet)$EASTING,V(GHtoGH.viewnet)$NORTHING), vertex.shape="none", edge.color="black", edge.width=1,rescale=FALSE, add=T, vertex.label=NA)
plot(GHtoSHRINES.viewnet,layout=cbind(V(GHtoSHRINES.viewnet)$EASTING,V(GHtoSHRINES.viewnet)$NORTHING), vertex.shape="none", edge.lty=2, edge.color="black", edge.width=1,rescale=FALSE, add=T, vertex.label=NA)
# plot(GHtoLANDFORM.viewnet,layout=cbind(V(GHtoLANDFORM.viewnet)$EASTING,V(GHtoLANDFORM.viewnet)$NORTHING), vertex.shape="none", edge.lty=3, edge.color="black", edge.width=1,rescale=FALSE, add=T, vertex.label=NA)
# plot(sites[sites$SITE_TYPE %in% c("LANDFORM"),], add=T, pch=22, cex=2, lwd=1, col="black", bg="#FEE08B")
plot(sites[sites$SITE_TYPE %in% c("GH_CORE","GH_OUTLIER"),], add=T, pch=21, cex=0.75, lwd=1, col="black", bg="white")
plot(sites[sites$SITE_TYPE %in% c("SHRINE","STONE_CIRCLE", "CRESCENT","HERRADURA"),], add=T, pch=15, cex=0.5, lwd=1,col="black")
text(labels="b", x=xmax(hill.small)-(0.05 * inch.x), y=ymin(hill.small)+(0.05 * inch.y), adj=c(1,0), cex=2, font=2)
dev.off()
distill('../FIGURES/VIEWNETS.pdf')
### FIGURE 4: CHACO VIEWNETS - GH2GH and GH2SHRINES
fig.width <- half.width
between <- 0.05
num.plots <- 2
plot.width <- half.width
plot.height <- plot.width * nrow(chaco.basin.hill)/ncol(chaco.basin.hill)
fig.height <- (plot.height * num.plots) + (between * (num.plots-1))
pdf(file='../FIGURES/CHACO_VIEWNETS.pdf', width=fig.width, height=fig.height, bg="white", pointsize=8, version="1.7")
# VEPIIN prcp
i <- 1
par(mai=c((plot.height * (num.plots-i)) + (between * (num.plots-i)),0,(plot.height * (i-1)) + (between * (i-1)),0),
oma=c(0,0,0,0),
lend=2,
ljoin=1,
xpd=F)
plot(1, type='n', xlab="", ylab="", xlim=c(xmin(chaco.basin.hill),xmax(chaco.basin.hill)),ylim=c(ymin(chaco.basin.hill),ymax(chaco.basin.hill)), xaxs="i", yaxs="i", axes=FALSE, main='')
rasterImage(CHACO_BASIN_HILLSHADE.png, xmin(chaco.basin.hill),ymin(chaco.basin.hill),xmax(chaco.basin.hill),ymax(chaco.basin.hill), interpolate=F)
GH.ids.basin <- as.vector(V(sites.viewnet)[(SITE_TYPE %in% c("GH_OUTLIER","GH_CORE")) & (name %in% raster::crop(sites,chaco.basin.poly)$NAME)])
SHRINES.ids.basin <- as.vector(V(sites.viewnet)[(SITE_TYPE %in% c("SHRINE","STONE_CIRCLE","CRESCENT","HERRADURA")) & (name %in% raster::crop(sites,chaco.basin.poly)$NAME)])
GHtoGH.viewnet.basin <- subgraph.edges(sites.viewnet,unlist(sites.viewnet[[GH.ids.basin, GH.ids.basin, edges=T]]),delete.vertices=FALSE)
GHtoSHRINES.viewnet.basin <- subgraph.edges(sites.viewnet, unlist(sites.viewnet[[GH.ids.basin, SHRINES.ids.basin, edges=T]]),delete.vertices=FALSE)
plot(GHtoGH.viewnet.basin,layout=cbind(V(GHtoGH.viewnet.basin)$EASTING,V(GHtoGH.viewnet.basin)$NORTHING), vertex.shape="none", edge.color="black", edge.width=1,rescale=FALSE, add=T, vertex.label=NA)
plot(GHtoSHRINES.viewnet.basin,layout=cbind(V(GHtoSHRINES.viewnet.basin)$EASTING,V(GHtoSHRINES.viewnet.basin)$NORTHING), vertex.shape="none", edge.lty=2, edge.color="black", edge.width=1,rescale=FALSE, add=T, vertex.label=NA)
plot(raster::crop(sites[sites$SITE_TYPE %in% c("GH_CORE","GH_OUTLIER"),],chaco.basin.poly), add=T, pch=21, cex=0.75, lwd=1, col="black", bg="white")
plot(raster::crop(sites[sites$SITE_TYPE %in% c("SHRINE","STONE_CIRCLE", "CRESCENT","HERRADURA"),],chaco.basin.poly), add=T, pch=15, cex=0.5, lwd=1,col="black")
plot(chaco.canyon.poly, add=T, border='gray50', lty=1, lwd=1.5)
text(extent(chaco.canyon.poly)@xmax,extent(chaco.canyon.poly)@ymax, labels="Fig. 6b", cex=1, adj=c(0.1,-0.5), col='gray50')
text(776000,4016000,labels="Pierre's \nArea C",adj=c(0,0.5), cex=0.75, srt=0, font=2) #
# text(750000,4015500,labels="to Skunk Springs GH",adj=c(0.5,0.5), cex=1,srt=1.8, font=2)
text(744000,3953000,labels="1",adj=c(1,0.5), cex=0.75,srt=0, font=2) # Dalton Pass
text(749000,3955000,labels="2",adj=c(0.5,1), cex=0.75,srt=0, font=2) # Casa Estrella
text(763222,3951000,labels="3",adj=c(0.5,1), cex=0.75,srt=0, font=2) # Kin Ya'a
text(770035,3948000,labels="4",adj=c(0.5,1), cex=0.75,srt=0, font=2) # Bluewater Spring
# text(801000,3986515,labels="Pueblo \nPintado",adj=c(0,0.5), cex=1,srt=0, font=2)
# text(790000,3999000,labels="Bis Saani \nEast/West",adj=c(0,0.5), cex=1,srt=0, font=2)
text(sites[sites$NAME=="HOSTA_BUTTE",],labels="Hosta Butte Shrine",pos=4, cex=0.75,srt=0, font=2)
inch.x <- (xmax(chaco.basin.hill)-xmin(chaco.basin.hill))/(fig.width-par('mai')[2]-par('mai')[4])
inch.y <- (ymax(chaco.basin.hill)-ymin(chaco.basin.hill))/(fig.height-par('mai')[1]-par('mai')[3])
scalebar.new(d=20000, cex=0.075/(pointsize/100), font=2, side='right',lab.side='right', height=0.05*inch.y, label="20 km", line.offset=c(0.05*inch.x,0.05*inch.y), xy=c(xmin(chaco.basin.hill),ymin(chaco.basin.hill)), lwd=2, lend=1)
north.width <- 0.1
north.height <- 0.25
inch.xy <- c(0.1,0.15)
n.ratio <- 5/4
arrows(x0=xmin(chaco.basin.hill)+inch.xy[1]*inch.x,y0=ymin(chaco.basin.hill)+inch.xy[2]*inch.y,x1=xmin(chaco.basin.hill)+inch.xy[1]*inch.x,y1=ymin(chaco.basin.hill)+(inch.xy[2]+north.height)*inch.y, length=(north.width/2)/sin(pi/4), angle=45, lwd=n.ratio*north.width/(pointsize/100), lend=1)
text(labels="N",x=xmin(chaco.basin.hill)+0.1*inch.x,y=ymin(chaco.basin.hill)+0.15*inch.y,adj=c(0.5,0),cex=n.ratio*north.width/(pointsize/100), font=2)
text(labels="a", x=xmax(chaco.basin.hill)-(0.05 * inch.x), y=ymin(chaco.basin.hill)+(0.05 * inch.y), adj=c(1,0), cex=2, font=2)
i <- 2
par(mai=c((plot.height * (num.plots-i)) + (between * (num.plots-i)),0,(plot.height * (i-1)) + (between * (i-1)),0),
oma=c(0,0,0,0),
lend=2,
ljoin=1,
xpd=F,
new=T)
plot(1, type='n', xlab="", ylab="", xlim=c(xmin(chaco.canyon.hill),xmax(chaco.canyon.hill)),ylim=c(ymin(chaco.canyon.hill),ymax(chaco.canyon.hill)), xaxs="i", yaxs="i", axes=FALSE, main='')
rasterImage(CHACO_CANYON_HILLSHADE.png, xmin(chaco.canyon.hill),ymin(chaco.canyon.hill),xmax(chaco.canyon.hill),ymax(chaco.canyon.hill), interpolate=F)
text(768000,3997500,labels="Peñasco\nBlanco",adj=c(0.5,0), cex=0.75, font=2,srt=0)
# text(769000,3995200,labels="29SJ1088",adj=c(0.5,0.5), cex=0.75, font=2,srt=1.5)
text(773400,3992000,labels="Tsin\nKletsin",adj=c(0.5,1), cex=0.75, font=2,srt=0)
text(sites[sites$NAME=="KIN_INDIAN_RUIN",],labels="Kin Indian Ruin",pos=4, cex=0.75, font=2,srt=0)
# text(784000,3996800,labels="to Bis Saani",col="white",adj=c(0.5,1), cex=3, font=2,srt=21)
GH.ids.canyon <- as.vector(V(sites.viewnet)[(SITE_TYPE %in% c("GH_OUTLIER","GH_CORE")) & (name %in% raster::crop(sites,chaco.canyon.hill)$NAME)])
SHRINES.ids.canyon <- as.vector(V(sites.viewnet)[(SITE_TYPE %in% c("SHRINE","STONE_CIRCLE","CRESCENT","HERRADURA")) & (name %in% raster::crop(sites,chaco.canyon.hill)$NAME)])
GHtoGH.viewnet.canyon <- subgraph.edges(sites.viewnet,unlist(sites.viewnet[[GH.ids.canyon, GH.ids.canyon, edges=T]]),delete.vertices=FALSE)
GHtoSHRINES.viewnet.canyon <- subgraph.edges(sites.viewnet, unlist(sites.viewnet[[GH.ids.canyon, SHRINES.ids.canyon, edges=T]]),delete.vertices=FALSE)
plot(GHtoGH.viewnet.canyon,layout=cbind(V(GHtoGH.viewnet.canyon)$EASTING,V(GHtoGH.viewnet.canyon)$NORTHING), vertex.shape="none", edge.color="black", edge.width=1,rescale=FALSE, add=T, vertex.label=NA)
plot(GHtoSHRINES.viewnet.canyon,layout=cbind(V(GHtoSHRINES.viewnet.canyon)$EASTING,V(GHtoSHRINES.viewnet.canyon)$NORTHING), vertex.shape="none", edge.lty=2, edge.color="black", edge.width=1,rescale=FALSE, add=T, vertex.label=NA)
plot(raster::crop(sites[sites$SITE_TYPE %in% c("GH_CORE","GH_OUTLIER"),],chaco.canyon.poly), add=T, pch=21, cex=0.75, lwd=1, col="black", bg="white")
plot(raster::crop(sites[sites$SITE_TYPE %in% c("SHRINE","STONE_CIRCLE", "CRESCENT","HERRADURA"),],chaco.canyon.poly), add=T, pch=15, cex=0.5, lwd=1,col="black")
inch.x <- (xmax(chaco.canyon.hill)-xmin(chaco.canyon.hill))/(fig.width-par('mai')[2]-par('mai')[4])
inch.y <- (ymax(chaco.canyon.hill)-ymin(chaco.canyon.hill))/(fig.height-par('mai')[1]-par('mai')[3])
scalebar.new(d=2500, cex=0.075/(pointsize/100), font=2, side='right',lab.side='right', height=0.05*inch.y, label="2.5 km", line.offset=c(0.05*inch.x,0.05*inch.y), xy=c(xmin(chaco.canyon.hill),ymin(chaco.canyon.hill)), lwd=2, lend=1)
north.width <- 0.1
north.height <- 0.25
inch.xy <- c(0.1,0.15)
n.ratio <- 5/4
arrows(x0=xmin(chaco.canyon.hill)+inch.xy[1]*inch.x,y0=ymin(chaco.canyon.hill)+inch.xy[2]*inch.y,x1=xmin(chaco.canyon.hill)+inch.xy[1]*inch.x,y1=ymin(chaco.canyon.hill)+(inch.xy[2]+north.height)*inch.y, length=(north.width/2)/sin(pi/4), angle=45, lwd=n.ratio*north.width/(pointsize/100), lend=1)
text(labels="N",x=xmin(chaco.canyon.hill)+0.1*inch.x,y=ymin(chaco.canyon.hill)+0.15*inch.y,adj=c(0.5,0),cex=n.ratio*north.width/(pointsize/100), font=2)
text(labels="b", x=xmax(chaco.canyon.hill)-(0.05 * inch.x), y=ymin(chaco.canyon.hill)+(0.05 * inch.y), adj=c(1,0), cex=2, font=2)
dev.off()
distill('../FIGURES/CHACO_VIEWNETS.pdf')
### FIGURE 5: EARLY VS. LATE VIEWNETS
sites.GH.early <- sites[sites$SITE_TYPE %in% c("GH_OUTLIER","GH_CORE") & sites$DATE %in% c(1,2,3),]
GH.early.ids <- as.vector(V(sites.viewnet)[name %in% sites.GH.early$UNIQUE_ID])
GHtoLANDFORM.early.viewnet <- subgraph.edges(sites.viewnet, unlist(sites.viewnet[[GH.early.ids, LANDFORM.ids, edges=T]]),delete.vertices=FALSE)
GHtoSHRINES.early.viewnet <- subgraph.edges(sites.viewnet, unlist(sites.viewnet[[GH.early.ids, SHRINE.ids, edges=T]]),delete.vertices=FALSE)
GHtoGH.early.viewnet <- subgraph.edges(sites.viewnet, unlist(sites.viewnet[[GH.early.ids, GH.early.ids, edges=T]]),delete.vertices=FALSE)
sites.GH.late <- sites[sites$SITE_TYPE %in% c("GH_OUTLIER","GH_CORE") & sites$DATE %in% c(4,5,6),]
GH.late.ids <- as.vector(V(sites.viewnet)[name %in% sites.GH.late$UNIQUE_ID])
GHtoLANDFORM.late.viewnet <- subgraph.edges(sites.viewnet, unlist(sites.viewnet[[GH.late.ids, LANDFORM.ids, edges=T]]),delete.vertices=FALSE)
GHtoSHRINES.late.viewnet <- subgraph.edges(sites.viewnet, unlist(sites.viewnet[[GH.late.ids, SHRINE.ids, edges=T]]),delete.vertices=FALSE)
GHtoGH.late.viewnet <- subgraph.edges(sites.viewnet, unlist(sites.viewnet[[GH.late.ids, GH.late.ids, edges=T]]),delete.vertices=FALSE)
fig.width <- full.width
between <- 0.05
num.plots <- 2
plot.width <- (full.width - (between * (num.plots-1)))/num.plots
fig.height <- plot.width * plot.ratio
pdf(file='../FIGURES/EARLY_VS_LATE_VIEWNETS.pdf', width=fig.width, height=fig.height, bg="white", pointsize=8, version="1.7")
# VEPIIN prcp
i <- 1
par(mai=c(0,(plot.width * (i-1)) + (between * (i-1)),0,(plot.width * (num.plots-i)) + (between * (num.plots-i))),
oma=c(0,0,0,0),
lend=2,
ljoin=1,
xpd=F)
plot(1, type='n', xlab="", ylab="", xlim=c(xmin(hill.small),xmax(hill.small)),ylim=c(ymin(hill.small),ymax(hill.small)), xaxs="i", yaxs="i", axes=FALSE, main='')
rasterImage(HILLSHADE.png, xmin(hill.small),ymin(hill.small),xmax(hill.small),ymax(hill.small), interpolate=F)
plot(GHtoGH.early.viewnet,layout=cbind(V(GHtoGH.viewnet)$EASTING,V(GHtoGH.viewnet)$NORTHING), vertex.shape="none", edge.color="black", edge.width=1,rescale=FALSE, add=T, vertex.label=NA)
plot(GHtoSHRINES.early.viewnet,layout=cbind(V(GHtoSHRINES.viewnet)$EASTING,V(GHtoSHRINES.viewnet)$NORTHING), vertex.shape="none", edge.lty=2, edge.color="black", edge.width=1,rescale=FALSE, add=T, vertex.label=NA)
# plot(GHtoLANDFORM.early.viewnet,layout=cbind(V(GHtoLANDFORM.viewnet)$EASTING,V(GHtoLANDFORM.viewnet)$NORTHING), vertex.shape="none", edge.lty=3, edge.color="black", edge.width=1,rescale=FALSE, add=T, vertex.label=NA)
# plot(sites[sites$SITE_TYPE %in% c("LANDFORM"),], add=T, pch=22, cex=0.75, lwd=1, col="black", bg="white")
plot(sites.GH.early, add=T, pch=21, cex=0.75, lwd=1, col="black", bg="white")
plot(sites[sites$SITE_TYPE %in% c("SHRINE","STONE_CIRCLE", "CRESCENT","HERRADURA"),], add=T, pch=15, cex=0.5, lwd=1,col="black")
inch.x <- (xmax(hill.small)-xmin(hill.small))/(fig.width-par('mai')[2]-par('mai')[4])
inch.y <- (ymax(hill.small)-ymin(hill.small))/(fig.height-par('mai')[1]-par('mai')[3])
text(labels="a", x=xmax(hill.small)-(0.05 * inch.x), y=ymin(hill.small)+(0.05 * inch.y), adj=c(1,0), cex=2, font=2)
i <- 2
par(mai=c(0,(plot.width * (i-1)) + (between * (i-1)),0,(plot.width * (num.plots-i)) + (between * (num.plots-i))),
oma=c(0,0,0,0),
lend=2,
ljoin=1,
xpd=F,
new=T)
plot(1, type='n', xlab="", ylab="", xlim=c(xmin(hill.small),xmax(hill.small)),ylim=c(ymin(hill.small),ymax(hill.small)), xaxs="i", yaxs="i", axes=FALSE, main='')
rasterImage(HILLSHADE.png, xmin(hill.small),ymin(hill.small),xmax(hill.small),ymax(hill.small), interpolate=F)
plot(GHtoGH.late.viewnet,layout=cbind(V(GHtoGH.viewnet)$EASTING,V(GHtoGH.viewnet)$NORTHING), vertex.shape="none", edge.color="black", edge.width=1,rescale=FALSE, add=T, vertex.label=NA)
plot(GHtoSHRINES.late.viewnet,layout=cbind(V(GHtoSHRINES.viewnet)$EASTING,V(GHtoSHRINES.viewnet)$NORTHING), vertex.shape="none", edge.lty=2, edge.color="black", edge.width=1,rescale=FALSE, add=T, vertex.label=NA)
# plot(GHtoLANDFORM.late.viewnet,layout=cbind(V(GHtoLANDFORM.viewnet)$EASTING,V(GHtoLANDFORM.viewnet)$NORTHING), vertex.shape="none", edge.lty=3, edge.color="black", edge.width=1,rescale=FALSE, add=T, vertex.label=NA)
# plot(sites[sites$SITE_TYPE %in% c("LANDFORM"),], add=T, pch=22, cex=0.75, lwd=1, col="black", bg="white")
plot(sites.GH.late, add=T, pch=21, cex=0.75, lwd=1, col="black", bg="white")
plot(sites[sites$SITE_TYPE %in% c("SHRINE","STONE_CIRCLE", "CRESCENT","HERRADURA"),], add=T, pch=15, cex=0.5, lwd=1,col="black")
text(labels="b", x=xmax(hill.small)-(0.05 * inch.x), y=ymin(hill.small)+(0.05 * inch.y), adj=c(1,0), cex=2, font=2)
dev.off()
distill('../FIGURES/EARLY_VS_LATE_VIEWNETS.pdf')
SHRINE.cvs
GH.only.cvs
plot(GH.only.cvs)
sum(GH.only.cvs[])
GH.only.cvs.count <- sum(GH.only.cvs[], na.rm=T)
GH.only.cvs.count
GH.only.cvs.sqkm <- GH.only.cvs.count*50*50/1000/1000
GH.only.cvs.sqkm
50*50
GH.only.cvs.sqkm <- GH.only.cvs.count*2500/1000000
GH.only.cvs.sqkm
SHRINE.only.cvs.count <- sum(SHRINE.only.cvs[], na.rm=T)
SHRINE.only.cvs.sqkm <- SHRINE.only.cvs.count*2500/1000000
SHRINE.only.cvs.sqkm
plot(GH.plus.SHRINE)
GH.only.cvs.count <- sum(calc(GH.cvs,function(x){x[x>0] <- 1; return(x)})[], na.rm=T)
GH.only.cvs.sqkm <- GH.only.cvs.count*2500/1000000
GH.only.cvs.sqkm
SHRINE.only.cvs.count <- sum(calc(SHRINE.cvs,function(x){x[x>0] <- 1; return(x)})[], na.rm=T)
SHRINE.only.cvs.sqkm <- SHRINE.only.cvs.count*2500/1000000
SHRINE.only.cvs.sqkm
GH.plus.SHRINE.cvs.count <- sum((calc(GH.cvs,function(x){x[x>0] <- 1; return(x)}) + calc(SHRINE.cvs,function(x){x[x>0] <- 1; return(x)}))[], na.rm=T)
GH.plus.SHRINE.cvs.sqkm <- GH.plus.SHRINE.cvs.count*2500/1000000 # 27602.62 km^2
GH.plus.SHRINE.cvs.sqkm
plot((calc(GH.cvs,function(x){x[x>0] <- 1; return(x)}) + calc(SHRINE.cvs,function(x){x[x>0] <- 1; return(x)})))
GH.only.cvs.count <- sum(GH.only.cvs+GH.plus.SHRINE)[], na.rm=T)
GH.only.cvs.count <- sum((GH.only.cvs+GH.plus.SHRINE)[], na.rm=T)
GH.only.cvs.sqkm <- GH.only.cvs.count*2500/1000000 # 29686.4 km^2
GH.only.cvs.sqkm
GH.only.cvs.count
plot(GH.only.cvs)
plot(GH.plus.SHRINE)
plot((GH.only.cvs+GH.plus.SHRINE))
help(raster)
help(calc)
GH.plus.SHRINE.cvs.count <- sum(calc(calc(GH.cvs,function(x){x[x>0] <- 1; return(x)}) + calc(SHRINE.cvs,function(x){x[x>0] <- 1; return(x)}),function(x){x[x>0] <- 1; return(x)})[], na.rm=T)
GH.plus.SHRINE.cvs.sqkm <- GH.plus.SHRINE.cvs.count*2500/1000000 # 57289.02 km^2
GH.plus.SHRINE.cvs.sqkm
